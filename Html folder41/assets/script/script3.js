// 1
// основанный на синтаксисе объектов JavaScript. Он используется для передачи 
// и хранения структурированных данных между клиентом и сервером, а также для 
// представления данных в удобном для чтения формате.

// 2
// - Обмен данных между клиентом и сервером: JSON облегчает передачу 
//   структурированных данных между клиентской и серверной сторонами 
//   веб-приложения.
// - Сохранение конфигураций и настроек: JSON может быть использован для 
//   сохранения и передачи конфигураций и настроек приложения в удобном формате.

// 3
let str = '{ "name": "Alex", "age": 24 }';
const jsonObj = JSON.parse(str);
console.log(jsonObj);

// 4
let obj = { name: "Alex", age: 24 };
const jsonString = JSON.stringify(obj);
console.log(jsonString);

// 5
const jsonString = '{"name": "Alex", "age": 24}';
const jsonObj = JSON.parse(jsonString);
console.log(jsonObj);

const personObj = { name: "John", age: 30 };
console.log(personObj);

// 6
// JSON может содержать следующие типы данных:
// - Строки (в двойных кавычках)
// - Числа
// - Булевы значения (true или false)
// - Массивы (в квадратных скобках)
// - Объекты (в фигурных скобках)
// - null

// 7
// - Функции
// - Неограниченные числа (Infinity и -Infinity)
// - NaN

// 8
// Мы получаем JSON с сервера в виде строки. Когда сервер отправляет данные в формате JSON, 
// он преобразует данные в строку JSON, которую клиент получает. 
// Клиент, в свою очередь, может использовать функцию JSON.parse() для преобразования этой строки 
// JSON обратно в объекты и массивы JavaScript, чтобы легче работать с данными.

// 9
// Мы отправляем JSON на сервер также в виде строки. Когда клиент хочет отправить данные на сервер 
// в формате JSON, он сначала преобразует данные в строку JSON с помощью функции JSON.stringify(), 
// а затем передает эту строку на сервер через запрос. 
// На сервере серверная сторона может использовать соответствующие инструменты или библиотеки 
// для парсинга JSON и преобразования его обратно в объекты или структуры данных, 
// которые можно использовать для обработки данных на сервере.
